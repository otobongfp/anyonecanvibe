@tailwind base;
@tailwind components;
@tailwind utilities;

@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

/* Animations */
@keyframes slide-in {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

.animate-slide-in {
  animation: slide-in 0.3s ease-out;
}

:root {
  --wire-bg: #0b0b0c;
  --wire-stroke: #ffffff;
  --wire-accent: #98fb98;
}

.light {
  --wire-bg: #ffffff;
  --wire-stroke: #0b0b0c;
  --wire-accent: #22c55e;
}

/* Override Tailwind colors with CSS custom properties */
.bg-wire-bg {
  background-color: var(--wire-bg) !important;
}

.text-wire-stroke {
  color: var(--wire-stroke) !important;
}

.border-wire-stroke {
  border-color: var(--wire-stroke) !important;
}

.text-wire-accent {
  color: var(--wire-accent) !important;
}

.bg-wire-accent {
  background-color: var(--wire-accent) !important;
}

.border-wire-accent {
  border-color: var(--wire-accent) !important;
}

/* Additional overrides for common text and outline issues */
.text-wire-stroke\/80 {
  color: rgba(255, 255, 255, 0.8) !important;
}

.light .text-wire-stroke\/80 {
  color: rgba(11, 11, 12, 0.8) !important;
}

.text-wire-stroke\/70 {
  color: rgba(255, 255, 255, 0.7) !important;
}

.light .text-wire-stroke\/70 {
  color: rgba(11, 11, 12, 0.7) !important;
}

.text-wire-stroke\/60 {
  color: rgba(255, 255, 255, 0.6) !important;
}

.light .text-wire-stroke\/60 {
  color: rgba(11, 11, 12, 0.6) !important;
}

.text-wire-stroke\/50 {
  color: rgba(255, 255, 255, 0.5) !important;
}

.light .text-wire-stroke\/50 {
  color: rgba(11, 11, 12, 0.5) !important;
}

/* Fix outline colors */
*:focus {
  outline: 2px solid var(--wire-accent) !important;
  outline-offset: 2px;
}

/* Ensure all text elements use the correct color */
h1,
h2,
h3,
h4,
h5,
h6,
p,
span,
div,
a,
button,
input,
textarea,
label {
  color: var(--wire-stroke) !important;
}

/* Fix any remaining white text issues in light mode */
.light h1,
.light h2,
.light h3,
.light h4,
.light h5,
.light h6,
.light p,
.light span,
.light div,
.light a,
.light button,
.light input,
.light textarea,
.light label {
  color: var(--wire-stroke) !important;
}

/* Override common Tailwind colors to use theme variables */
.light .bg-white {
  background-color: var(--wire-bg) !important;
}

.light .text-white {
  color: var(--wire-stroke) !important;
}

.light .text-gray-900 {
  color: var(--wire-stroke) !important;
}

.light .text-gray-800 {
  color: var(--wire-stroke) !important;
}

.light .text-gray-700 {
  color: var(--wire-stroke) !important;
}

.light .text-gray-600 {
  color: var(--wire-stroke) !important;
}

.light .text-gray-500 {
  color: var(--wire-stroke) !important;
}

.light .border-gray-200 {
  border-color: var(--wire-stroke) !important;
}

.light .border-gray-300 {
  border-color: var(--wire-stroke) !important;
}

/* Dark mode overrides for common colors */
.dark .bg-white {
  background-color: var(--wire-bg) !important;
}

.dark .text-gray-900 {
  color: var(--wire-stroke) !important;
}

.dark .text-gray-800 {
  color: var(--wire-stroke) !important;
}

.dark .text-gray-700 {
  color: var(--wire-stroke) !important;
}

.dark .text-gray-600 {
  color: var(--wire-stroke) !important;
}

.dark .text-gray-500 {
  color: var(--wire-stroke) !important;
}

.dark .border-gray-200 {
  border-color: var(--wire-stroke) !important;
}

.dark .border-gray-300 {
  border-color: var(--wire-stroke) !important;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  overflow-y: hidden;
  font-family: "Inter", system-ui, sans-serif;
  background-color: var(--wire-bg) !important;
  color: var(--wire-stroke) !important;
}

body {
  min-height: 100vh;
}

a {
  color: inherit;
  text-decoration: none;
}

/* Custom scrollbar - only for main content areas */
body::-webkit-scrollbar,
html::-webkit-scrollbar {
  width: 8px;
}

body::-webkit-scrollbar-track,
html::-webkit-scrollbar-track {
  background: var(--wire-bg);
}

body::-webkit-scrollbar-thumb,
html::-webkit-scrollbar-thumb {
  background: var(--wire-stroke);
  border-radius: 0;
}

body::-webkit-scrollbar-thumb:hover,
html::-webkit-scrollbar-thumb:hover {
  background: var(--wire-accent);
}

/* Hide scrollbars on nested containers */
.overflow-y-auto::-webkit-scrollbar {
  width: 0px;
  background: transparent;
}

/* Subtle scrollbar for bucket panel */
.bucket-panel::-webkit-scrollbar {
  width: 4px;
}

.bucket-panel::-webkit-scrollbar-track {
  background: transparent;
}

.bucket-panel::-webkit-scrollbar-thumb {
  background: var(--wire-stroke);
  opacity: 0.3;
  border-radius: 2px;
}

.bucket-panel::-webkit-scrollbar-thumb:hover {
  background: var(--wire-accent);
  opacity: 0.6;
}

/* Show scrollbars only on main content areas */
.main-content::-webkit-scrollbar {
  width: 8px;
}

.main-content::-webkit-scrollbar-track {
  background: var(--wire-bg);
}

.main-content::-webkit-scrollbar-thumb {
  background: var(--wire-stroke);
  border-radius: 0;
}

.main-content::-webkit-scrollbar-thumb:hover {
  background: var(--wire-accent);
}

/* Focus styles for accessibility */
*:focus {
  outline: 2px solid var(--wire-accent);
  outline-offset: 2px;
}

/* Custom utility classes */
.wire-card {
  background-color: var(--wire-bg);
  border: 2px solid var(--wire-stroke);
  padding: 1rem;
  transition: all 0.2s;
}

.wire-card:hover {
  transform: scale(1.05);
  animation: glow 2s ease-in-out infinite alternate;
}

.wire-card.no-hover:hover {
  transform: scale(1);
}

.wire-button {
  background-color: transparent !important;
  border: 2px solid var(--wire-stroke) !important;
  color: var(--wire-stroke) !important;
  padding: 0.5rem 1rem !important;
  font-weight: 500 !important;
  transition: all 0.2s !important;
  cursor: pointer !important;
  text-decoration: none !important;
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.wire-button:disabled {
  opacity: 0.5 !important;
  cursor: not-allowed !important;
}

.wire-button:disabled:hover {
  background-color: transparent !important;
  color: var(--wire-stroke) !important;
  transform: scale(1) !important;
}

/* Ensure wire-button hover works properly for all elements */
.wire-button:hover:not(:disabled) {
  background-color: var(--wire-stroke) !important;
  color: var(--wire-bg) !important;
}

/* Override any Tailwind hover classes that might conflict */
.wire-button.hover\:text-white:hover {
  color: var(--wire-bg) !important;
}

.wire-button.hover\:bg-white:hover {
  background-color: var(--wire-stroke) !important;
  color: var(--wire-bg) !important;
}

/* Ensure all wire-button text remains visible on hover */
button.wire-button:hover:not(:disabled),
a.wire-button:hover:not(:disabled),
.wire-button:hover:not(:disabled) {
  background-color: var(--wire-stroke) !important;
  color: var(--wire-bg) !important;
}

/* Override any Tailwind button styles that might conflict */
button.wire-button,
a.wire-button {
  background-color: transparent !important;
  border: 2px solid var(--wire-stroke) !important;
  color: var(--wire-stroke) !important;
}

/* Ensure hover states work for all button types */
button.wire-button:hover:not(:disabled),
a.wire-button:hover:not(:disabled),
.wire-button:hover:not(:disabled) {
  background-color: var(--wire-stroke) !important;
  color: var(--wire-bg) !important;
}

/* Force override any conflicting styles */
.wire-button:hover:not(:disabled) * {
  color: var(--wire-bg) !important;
}

.wire-input {
  background-color: var(--wire-bg);
  border: 2px solid var(--wire-stroke);
  color: var(--wire-stroke);
  padding: 0.5rem 0.75rem;
}

.wire-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}

.light .wire-input::placeholder {
  color: rgba(11, 11, 12, 0.5);
}

.wire-input:focus {
  outline: none;
  border-color: var(--wire-accent);
}

/* Additional theme-aware button styles - but don't override wire-button styles */
button:not(.wire-button) {
  color: var(--wire-stroke) !important;
}

/* Preserve specific text colors for buttons that have them */
button.text-wire-accent {
  color: var(--wire-accent) !important;
}

button.text-wire-accent:hover {
  color: var(--wire-bg) !important;
}

/* Handle buttons with wire-bg background */
button.bg-wire-bg {
  background-color: var(--wire-bg) !important;
}

button.bg-wire-bg:hover {
  background-color: var(--wire-stroke) !important;
  color: var(--wire-bg) !important;
}

/* Fix common button patterns */
.bg-blue-600 {
  background-color: var(--wire-accent) !important;
}

.text-blue-600 {
  color: var(--wire-accent) !important;
}

.hover\:bg-blue-700:hover {
  background-color: var(--wire-accent) !important;
  opacity: 0.8;
}

.hover\:bg-gray-50:hover {
  background-color: var(--wire-stroke) !important;
  opacity: 0.1;
}

.hover\:bg-gray-100:hover {
  background-color: var(--wire-stroke) !important;
  opacity: 0.1;
}

.hover\:bg-gray-700:hover {
  background-color: var(--wire-stroke) !important;
  opacity: 0.7;
}

/* Ensure text remains visible on hover for buttons with background changes */
button.hover\:bg-blue-700:hover,
button.hover\:bg-gray-50:hover,
button.hover\:bg-gray-100:hover,
button.hover\:bg-gray-700:hover {
  color: var(--wire-bg) !important;
}

/* For buttons that start with white text, ensure they stay visible */
button.text-white.hover\:bg-blue-700:hover,
button.text-white.hover\:bg-gray-700:hover {
  color: var(--wire-bg) !important;
}

/* For buttons that start with gray text, ensure they stay visible */
button.text-gray-700.hover\:bg-gray-50:hover,
button.text-gray-700.hover\:bg-gray-100:hover {
  color: var(--wire-bg) !important;
}

/* Fix input and form elements */
input,
textarea,
select {
  background-color: var(--wire-bg) !important;
  color: var(--wire-stroke) !important;
  border-color: var(--wire-stroke) !important;
}

input::placeholder,
textarea::placeholder {
  color: var(--wire-stroke) !important;
  opacity: 0.5;
}

/* Fix common background patterns */
.bg-gray-100 {
  background-color: var(--wire-bg) !important;
}

.bg-gray-50 {
  background-color: var(--wire-bg) !important;
}

.bg-gray-200 {
  background-color: var(--wire-stroke) !important;
  opacity: 0.1;
}
